////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUXHM.vf
// /___/   /\     Timestamp : 01/10/2017 03:06:09
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/MUXHM.vf -w C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/MUXHM.sch
//Design Name: MUXHM
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUXHM(a, 
             b, 
             sel, 
             o);

    input [7:0] a;
    input [7:0] b;
    input sel;
   output [7:0] o;
   
   wire nsel;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   
   AND2  XLXI_1 (.I0(a[0]), 
                .I1(nsel), 
                .O(XLXN_60));
   AND2  XLXI_2 (.I0(a[1]), 
                .I1(nsel), 
                .O(XLXN_62));
   AND2  XLXI_3 (.I0(a[2]), 
                .I1(nsel), 
                .O(XLXN_63));
   AND2  XLXI_4 (.I0(a[3]), 
                .I1(nsel), 
                .O(XLXN_64));
   AND2  XLXI_5 (.I0(a[4]), 
                .I1(nsel), 
                .O(XLXN_65));
   AND2  XLXI_6 (.I0(a[5]), 
                .I1(nsel), 
                .O(XLXN_67));
   AND2  XLXI_7 (.I0(a[6]), 
                .I1(nsel), 
                .O(XLXN_68));
   AND2  XLXI_8 (.I0(a[7]), 
                .I1(nsel), 
                .O(XLXN_69));
   AND2  XLXI_17 (.I0(b[0]), 
                 .I1(sel), 
                 .O(XLXN_61));
   AND2  XLXI_18 (.I0(b[1]), 
                 .I1(sel), 
                 .O(XLXN_70));
   AND2  XLXI_19 (.I0(b[2]), 
                 .I1(sel), 
                 .O(XLXN_71));
   AND2  XLXI_20 (.I0(b[3]), 
                 .I1(sel), 
                 .O(XLXN_72));
   AND2  XLXI_25 (.I0(b[4]), 
                 .I1(sel), 
                 .O(XLXN_73));
   AND2  XLXI_26 (.I0(b[5]), 
                 .I1(sel), 
                 .O(XLXN_74));
   AND2  XLXI_27 (.I0(b[6]), 
                 .I1(sel), 
                 .O(XLXN_75));
   AND2  XLXI_28 (.I0(b[7]), 
                 .I1(sel), 
                 .O(XLXN_76));
   OR2  XLXI_78 (.I0(XLXN_61), 
                .I1(XLXN_60), 
                .O(o[0]));
   OR2  XLXI_79 (.I0(XLXN_70), 
                .I1(XLXN_62), 
                .O(o[1]));
   OR2  XLXI_80 (.I0(XLXN_71), 
                .I1(XLXN_63), 
                .O(o[2]));
   OR2  XLXI_81 (.I0(XLXN_72), 
                .I1(XLXN_64), 
                .O(o[3]));
   OR2  XLXI_82 (.I0(XLXN_73), 
                .I1(XLXN_65), 
                .O(o[4]));
   OR2  XLXI_83 (.I0(XLXN_74), 
                .I1(XLXN_67), 
                .O(o[5]));
   OR2  XLXI_84 (.I0(XLXN_75), 
                .I1(XLXN_68), 
                .O(o[6]));
   OR2  XLXI_85 (.I0(XLXN_76), 
                .I1(XLXN_69), 
                .O(o[7]));
   INV  XLXI_88 (.I(sel), 
                .O(nsel));
endmodule
