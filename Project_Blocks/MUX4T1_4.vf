////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUX4T1_4.vf
// /___/   /\     Timestamp : 01/10/2017 03:06:09
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/MUX4T1_4.vf -w C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/MUX4T1_4.sch
//Design Name: MUX4T1_4
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_4(I0, 
                I1, 
                I2, 
                I3, 
                s, 
                o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   
   AND2  XLXI_1 (.I0(XLXN_3), 
                .I1(XLXN_2), 
                .O(XLXN_4));
   AND2  XLXI_2 (.I0(s[0]), 
                .I1(XLXN_2), 
                .O(XLXN_14));
   AND2  XLXI_3 (.I0(XLXN_3), 
                .I1(s[1]), 
                .O(XLXN_5));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(s[1]), 
                .O(XLXN_16));
   INV  XLXI_5 (.I(s[0]), 
               .O(XLXN_3));
   INV  XLXI_6 (.I(s[1]), 
               .O(XLXN_2));
   AND2  XLXI_7 (.I0(I0[1]), 
                .I1(XLXN_4), 
                .O(XLXN_6));
   AND2  XLXI_8 (.I0(I1[1]), 
                .I1(XLXN_14), 
                .O(XLXN_27));
   AND2  XLXI_9 (.I0(I2[1]), 
                .I1(XLXN_5), 
                .O(XLXN_28));
   AND2  XLXI_10 (.I0(I3[1]), 
                 .I1(XLXN_16), 
                 .O(XLXN_29));
   OR4  XLXI_11 (.I0(XLXN_29), 
                .I1(XLXN_28), 
                .I2(XLXN_27), 
                .I3(XLXN_6), 
                .O(o[1]));
   AND2  XLXI_22 (.I0(I0[0]), 
                 .I1(XLXN_4), 
                 .O(XLXN_21));
   AND2  XLXI_23 (.I0(I1[0]), 
                 .I1(XLXN_14), 
                 .O(XLXN_22));
   AND2  XLXI_24 (.I0(I2[0]), 
                 .I1(XLXN_5), 
                 .O(XLXN_23));
   AND2  XLXI_25 (.I0(I3[0]), 
                 .I1(XLXN_16), 
                 .O(XLXN_24));
   OR4  XLXI_26 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(o[0]));
   AND2  XLXI_38 (.I0(I0[2]), 
                 .I1(XLXN_4), 
                 .O(XLXN_53));
   AND2  XLXI_39 (.I0(I1[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_54));
   AND2  XLXI_40 (.I0(I2[2]), 
                 .I1(XLXN_5), 
                 .O(XLXN_55));
   AND2  XLXI_41 (.I0(I3[2]), 
                 .I1(XLXN_16), 
                 .O(XLXN_56));
   OR4  XLXI_42 (.I0(XLXN_56), 
                .I1(XLXN_55), 
                .I2(XLXN_54), 
                .I3(XLXN_53), 
                .O(o[2]));
   AND2  XLXI_48 (.I0(I0[3]), 
                 .I1(XLXN_4), 
                 .O(XLXN_63));
   AND2  XLXI_49 (.I0(I1[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_64));
   AND2  XLXI_50 (.I0(I2[3]), 
                 .I1(XLXN_5), 
                 .O(XLXN_65));
   AND2  XLXI_51 (.I0(I3[3]), 
                 .I1(XLXN_16), 
                 .O(XLXN_66));
   OR4  XLXI_52 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .I2(XLXN_64), 
                .I3(XLXN_63), 
                .O(o[3]));
endmodule
