////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ScanSync.vf
// /___/   /\     Timestamp : 01/10/2017 03:06:09
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/ScanSync.vf -w C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/ScanSync.sch
//Design Name: ScanSync
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_ScanSync(I0, 
                               I1, 
                               I2, 
                               I3, 
                               s, 
                               o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   
   AND2  XLXI_1 (.I0(XLXN_3), 
                .I1(XLXN_2), 
                .O(XLXN_4));
   AND2  XLXI_2 (.I0(s[0]), 
                .I1(XLXN_2), 
                .O(XLXN_14));
   AND2  XLXI_3 (.I0(XLXN_3), 
                .I1(s[1]), 
                .O(XLXN_5));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(s[1]), 
                .O(XLXN_16));
   INV  XLXI_5 (.I(s[0]), 
               .O(XLXN_3));
   INV  XLXI_6 (.I(s[1]), 
               .O(XLXN_2));
   AND2  XLXI_7 (.I0(I0[1]), 
                .I1(XLXN_4), 
                .O(XLXN_6));
   AND2  XLXI_8 (.I0(I1[1]), 
                .I1(XLXN_14), 
                .O(XLXN_27));
   AND2  XLXI_9 (.I0(I2[1]), 
                .I1(XLXN_5), 
                .O(XLXN_28));
   AND2  XLXI_10 (.I0(I3[1]), 
                 .I1(XLXN_16), 
                 .O(XLXN_29));
   OR4  XLXI_11 (.I0(XLXN_29), 
                .I1(XLXN_28), 
                .I2(XLXN_27), 
                .I3(XLXN_6), 
                .O(o[1]));
   AND2  XLXI_22 (.I0(I0[0]), 
                 .I1(XLXN_4), 
                 .O(XLXN_21));
   AND2  XLXI_23 (.I0(I1[0]), 
                 .I1(XLXN_14), 
                 .O(XLXN_22));
   AND2  XLXI_24 (.I0(I2[0]), 
                 .I1(XLXN_5), 
                 .O(XLXN_23));
   AND2  XLXI_25 (.I0(I3[0]), 
                 .I1(XLXN_16), 
                 .O(XLXN_24));
   OR4  XLXI_26 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(o[0]));
   AND2  XLXI_38 (.I0(I0[2]), 
                 .I1(XLXN_4), 
                 .O(XLXN_53));
   AND2  XLXI_39 (.I0(I1[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_54));
   AND2  XLXI_40 (.I0(I2[2]), 
                 .I1(XLXN_5), 
                 .O(XLXN_55));
   AND2  XLXI_41 (.I0(I3[2]), 
                 .I1(XLXN_16), 
                 .O(XLXN_56));
   OR4  XLXI_42 (.I0(XLXN_56), 
                .I1(XLXN_55), 
                .I2(XLXN_54), 
                .I3(XLXN_53), 
                .O(o[2]));
   AND2  XLXI_48 (.I0(I0[3]), 
                 .I1(XLXN_4), 
                 .O(XLXN_63));
   AND2  XLXI_49 (.I0(I1[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_64));
   AND2  XLXI_50 (.I0(I2[3]), 
                 .I1(XLXN_5), 
                 .O(XLXN_65));
   AND2  XLXI_51 (.I0(I3[3]), 
                 .I1(XLXN_16), 
                 .O(XLXN_66));
   OR4  XLXI_52 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .I2(XLXN_64), 
                .I3(XLXN_63), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_ScanSync(I0, 
                               I1, 
                               I2, 
                               I3, 
                               I4, 
                               I5, 
                               I6, 
                               I7, 
                               s, 
                               o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_90;
   wire XLXN_106;
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_112;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_115;
   wire XLXN_116;
   wire XLXN_117;
   wire XLXN_118;
   wire XLXN_119;
   wire XLXN_120;
   wire XLXN_121;
   
   MUX4T1_4_MUSER_ScanSync  M1 (.I0(I0[3:0]), 
                               .I1(I1[3:0]), 
                               .I2(I2[3:0]), 
                               .I3(I3[3:0]), 
                               .s(s[1:0]), 
                               .o(o0[3:0]));
   MUX4T1_4_MUSER_ScanSync  M2 (.I0(I4[3:0]), 
                               .I1(I5[3:0]), 
                               .I2(I6[3:0]), 
                               .I3(I7[3:0]), 
                               .s(s[1:0]), 
                               .o(o1[3:0]));
   MUX4T1_4_MUSER_ScanSync  M3 (.I0(I0[7:4]), 
                               .I1(I1[7:4]), 
                               .I2(I2[7:4]), 
                               .I3(I3[7:4]), 
                               .s(s[1:0]), 
                               .o(o2[3:0]));
   MUX4T1_4_MUSER_ScanSync  M4 (.I0(I4[7:4]), 
                               .I1(I5[7:4]), 
                               .I2(I6[7:4]), 
                               .I3(I7[7:4]), 
                               .s(s[1:0]), 
                               .o(o3[3:0]));
   INV  XLXI_21 (.I(s[2]), 
                .O(XLXN_90));
   AND2  XLXI_22 (.I0(o0[0]), 
                 .I1(XLXN_90), 
                 .O(XLXN_106));
   AND2  XLXI_23 (.I0(o1[0]), 
                 .I1(s[2]), 
                 .O(XLXN_107));
   AND2  XLXI_24 (.I0(o0[1]), 
                 .I1(XLXN_90), 
                 .O(XLXN_108));
   AND2  XLXI_25 (.I0(o1[1]), 
                 .I1(s[2]), 
                 .O(XLXN_109));
   AND2  XLXI_26 (.I0(o0[2]), 
                 .I1(XLXN_90), 
                 .O(XLXN_110));
   AND2  XLXI_27 (.I0(o1[2]), 
                 .I1(s[2]), 
                 .O(XLXN_111));
   AND2  XLXI_28 (.I0(o0[3]), 
                 .I1(XLXN_90), 
                 .O(XLXN_112));
   AND2  XLXI_29 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_113));
   AND2  XLXI_30 (.I0(o2[0]), 
                 .I1(XLXN_90), 
                 .O(XLXN_114));
   AND2  XLXI_31 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_115));
   AND2  XLXI_32 (.I0(o2[1]), 
                 .I1(XLXN_90), 
                 .O(XLXN_116));
   AND2  XLXI_33 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_117));
   AND2  XLXI_34 (.I0(o2[2]), 
                 .I1(XLXN_90), 
                 .O(XLXN_118));
   AND2  XLXI_35 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_119));
   AND2  XLXI_36 (.I0(o2[3]), 
                 .I1(XLXN_90), 
                 .O(XLXN_120));
   AND2  XLXI_37 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_121));
   OR2  XLXI_74 (.I0(XLXN_107), 
                .I1(XLXN_106), 
                .O(o[0]));
   OR2  XLXI_75 (.I0(XLXN_109), 
                .I1(XLXN_108), 
                .O(o[1]));
   OR2  XLXI_76 (.I0(XLXN_111), 
                .I1(XLXN_110), 
                .O(o[2]));
   OR2  XLXI_77 (.I0(XLXN_113), 
                .I1(XLXN_112), 
                .O(o[3]));
   OR2  XLXI_78 (.I0(XLXN_115), 
                .I1(XLXN_114), 
                .O(o[4]));
   OR2  XLXI_79 (.I0(XLXN_117), 
                .I1(XLXN_116), 
                .O(o[5]));
   OR2  XLXI_82 (.I0(XLXN_119), 
                .I1(XLXN_118), 
                .O(o[6]));
   OR2  XLXI_83 (.I0(XLXN_121), 
                .I1(XLXN_120), 
                .O(o[7]));
endmodule
`timescale 1ns / 1ps

module ScanSync(Hexs, 
                LES, 
                point, 
                Scan, 
                AN, 
                Hexo, 
                LE, 
                p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   MUX8T1_8_MUSER_ScanSync  MUX8180 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                    .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                    .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                    .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                    .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                    .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                    .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                    .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                    .s(Scan[2:0]), 
                                    .o(Hex[7:0]));
   MUX8T1_8_MUSER_ScanSync  MUX8181 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, 
         G0}), 
                                    .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                    .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                    .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                    .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                    .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                    .I6({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                    .I7({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                    .s(Scan[2:0]), 
                                    .o(COM[7:0]));
   BUF  XLXI_7 (.I(Hex[7]), 
               .O(Hexo[3]));
   BUF  XLXI_10 (.I(Hex[6]), 
                .O(Hexo[2]));
   BUF  XLXI_11 (.I(Hex[5]), 
                .O(Hexo[1]));
   BUF  XLXI_12 (.I(Hex[4]), 
                .O(Hexo[0]));
   BUF  XLXI_13 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_14 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_15 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_16 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_17 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_18 (.I(COM[6]), 
                .O(p));
   VCC  XLXI_19 (.P(V5));
   GND  XLXI_20 (.G(G0));
endmodule
