////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Frame.vf
// /___/   /\     Timestamp : 01/10/2017 12:30:30
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/Frame.vf -w C:/Users/poi/Repos/Logic-Computer-Design/Project_Blocks/Frame.sch
//Design Name: Frame
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MC14495_ZJU_MUSER_Frame(D0, 
                               D1, 
                               D2, 
                               D3, 
                               LE, 
                               point, 
                               a, 
                               b, 
                               c, 
                               d, 
                               e, 
                               f, 
                               g, 
                               p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_26;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   
   INV  XLXI_1 (.I(D0), 
               .O(XLXN_3));
   INV  XLXI_2 (.I(D1), 
               .O(XLXN_4));
   INV  XLXI_3 (.I(D2), 
               .O(XLXN_5));
   INV  XLXI_4 (.I(D3), 
               .O(XLXN_6));
   AND4  XLXI_5 (.I0(XLXN_3), 
                .I1(XLXN_4), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_26));
   AND4  XLXI_6 (.I0(D0), 
                .I1(D1), 
                .I2(D2), 
                .I3(XLXN_6), 
                .O(XLXN_28));
   AND3  XLXI_7 (.I0(XLXN_4), 
                .I1(XLXN_5), 
                .I2(XLXN_6), 
                .O(XLXN_29));
   AND3  XLXI_8 (.I0(D0), 
                .I1(D1), 
                .I2(XLXN_6), 
                .O(XLXN_30));
   AND3  XLXI_9 (.I0(D1), 
                .I1(XLXN_5), 
                .I2(XLXN_6), 
                .O(XLXN_31));
   AND3  XLXI_10 (.I0(D0), 
                 .I1(XLXN_5), 
                 .I2(XLXN_6), 
                 .O(XLXN_32));
   AND3  XLXI_11 (.I0(D0), 
                 .I1(XLXN_4), 
                 .I2(XLXN_5), 
                 .O(XLXN_34));
   AND3  XLXI_12 (.I0(XLXN_4), 
                 .I1(D2), 
                 .I2(XLXN_6), 
                 .O(XLXN_36));
   AND2  XLXI_13 (.I0(D0), 
                 .I1(XLXN_6), 
                 .O(XLXN_37));
   AND4  XLXI_14 (.I0(XLXN_3), 
                 .I1(D1), 
                 .I2(XLXN_5), 
                 .I3(D3), 
                 .O(XLXN_38));
   AND3  XLXI_15 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_40));
   AND3  XLXI_16 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_43));
   AND4  XLXI_17 (.I0(XLXN_3), 
                 .I1(D1), 
                 .I2(XLXN_5), 
                 .I3(XLXN_6), 
                 .O(XLXN_44));
   AND3  XLXI_18 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_46));
   AND3  XLXI_19 (.I0(XLXN_3), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_45));
   AND3  XLXI_20 (.I0(XLXN_3), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_47));
   AND4  XLXI_21 (.I0(D0), 
                 .I1(XLXN_4), 
                 .I2(D2), 
                 .I3(XLXN_6), 
                 .O(XLXN_48));
   AND4  XLXI_22 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_5), 
                 .I3(D3), 
                 .O(XLXN_49));
   AND4  XLXI_23 (.I0(D0), 
                 .I1(XLXN_4), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_33));
   AND4  XLXI_24 (.I0(XLXN_3), 
                 .I1(XLXN_4), 
                 .I2(D2), 
                 .I3(XLXN_6), 
                 .O(XLXN_41));
   AND4  XLXI_25 (.I0(D0), 
                 .I1(XLXN_5), 
                 .I2(XLXN_4), 
                 .I3(XLXN_6), 
                 .O(XLXN_42));
   OR3  XLXI_109 (.I0(XLXN_26), 
                 .I1(XLXN_28), 
                 .I2(XLXN_29), 
                 .O(XLXN_51));
   OR4  XLXI_110 (.I0(XLXN_30), 
                 .I1(XLXN_31), 
                 .I2(XLXN_32), 
                 .I3(XLXN_33), 
                 .O(XLXN_52));
   OR3  XLXI_111 (.I0(XLXN_34), 
                 .I1(XLXN_36), 
                 .I2(XLXN_37), 
                 .O(XLXN_53));
   OR4  XLXI_112 (.I0(XLXN_38), 
                 .I1(XLXN_40), 
                 .I2(XLXN_41), 
                 .I3(XLXN_42), 
                 .O(XLXN_54));
   OR3  XLXI_113 (.I0(XLXN_43), 
                 .I1(XLXN_44), 
                 .I2(XLXN_45), 
                 .O(XLXN_55));
   OR4  XLXI_114 (.I0(XLXN_46), 
                 .I1(XLXN_45), 
                 .I2(XLXN_47), 
                 .I3(XLXN_48), 
                 .O(XLXN_56));
   OR4  XLXI_115 (.I0(XLXN_49), 
                 .I1(XLXN_33), 
                 .I2(XLXN_41), 
                 .I3(XLXN_42), 
                 .O(XLXN_57));
   OR2  XLXI_117 (.I0(LE), 
                 .I1(XLXN_51), 
                 .O(g));
   OR2  XLXI_118 (.I0(LE), 
                 .I1(XLXN_52), 
                 .O(f));
   OR2  XLXI_119 (.I0(LE), 
                 .I1(XLXN_53), 
                 .O(e));
   OR2  XLXI_120 (.I0(LE), 
                 .I1(XLXN_54), 
                 .O(d));
   OR2  XLXI_121 (.I0(LE), 
                 .I1(XLXN_55), 
                 .O(c));
   OR2  XLXI_122 (.I0(LE), 
                 .I1(XLXN_56), 
                 .O(b));
   OR2  XLXI_123 (.I0(LE), 
                 .I1(XLXN_57), 
                 .O(a));
   INV  XLXI_125 (.I(point), 
                 .O(p));
endmodule
`timescale 1ns / 1ps

module MUXHM_MUSER_Frame(a, 
                         b, 
                         sel, 
                         o);

    input [7:0] a;
    input [7:0] b;
    input sel;
   output [7:0] o;
   
   wire nsel;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   
   AND2  XLXI_1 (.I0(a[0]), 
                .I1(nsel), 
                .O(XLXN_60));
   AND2  XLXI_2 (.I0(a[1]), 
                .I1(nsel), 
                .O(XLXN_62));
   AND2  XLXI_3 (.I0(a[2]), 
                .I1(nsel), 
                .O(XLXN_63));
   AND2  XLXI_4 (.I0(a[3]), 
                .I1(nsel), 
                .O(XLXN_64));
   AND2  XLXI_5 (.I0(a[4]), 
                .I1(nsel), 
                .O(XLXN_65));
   AND2  XLXI_6 (.I0(a[5]), 
                .I1(nsel), 
                .O(XLXN_67));
   AND2  XLXI_7 (.I0(a[6]), 
                .I1(nsel), 
                .O(XLXN_68));
   AND2  XLXI_8 (.I0(a[7]), 
                .I1(nsel), 
                .O(XLXN_69));
   AND2  XLXI_17 (.I0(b[0]), 
                 .I1(sel), 
                 .O(XLXN_61));
   AND2  XLXI_18 (.I0(b[1]), 
                 .I1(sel), 
                 .O(XLXN_70));
   AND2  XLXI_19 (.I0(b[2]), 
                 .I1(sel), 
                 .O(XLXN_71));
   AND2  XLXI_20 (.I0(b[3]), 
                 .I1(sel), 
                 .O(XLXN_72));
   AND2  XLXI_25 (.I0(b[4]), 
                 .I1(sel), 
                 .O(XLXN_73));
   AND2  XLXI_26 (.I0(b[5]), 
                 .I1(sel), 
                 .O(XLXN_74));
   AND2  XLXI_27 (.I0(b[6]), 
                 .I1(sel), 
                 .O(XLXN_75));
   AND2  XLXI_28 (.I0(b[7]), 
                 .I1(sel), 
                 .O(XLXN_76));
   OR2  XLXI_78 (.I0(XLXN_61), 
                .I1(XLXN_60), 
                .O(o[0]));
   OR2  XLXI_79 (.I0(XLXN_70), 
                .I1(XLXN_62), 
                .O(o[1]));
   OR2  XLXI_80 (.I0(XLXN_71), 
                .I1(XLXN_63), 
                .O(o[2]));
   OR2  XLXI_81 (.I0(XLXN_72), 
                .I1(XLXN_64), 
                .O(o[3]));
   OR2  XLXI_82 (.I0(XLXN_73), 
                .I1(XLXN_65), 
                .O(o[4]));
   OR2  XLXI_83 (.I0(XLXN_74), 
                .I1(XLXN_67), 
                .O(o[5]));
   OR2  XLXI_84 (.I0(XLXN_75), 
                .I1(XLXN_68), 
                .O(o[6]));
   OR2  XLXI_85 (.I0(XLXN_76), 
                .I1(XLXN_69), 
                .O(o[7]));
   INV  XLXI_88 (.I(sel), 
                .O(nsel));
endmodule
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_Frame(I0, 
                            I1, 
                            I2, 
                            I3, 
                            s, 
                            o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   
   AND2  XLXI_1 (.I0(XLXN_3), 
                .I1(XLXN_2), 
                .O(XLXN_4));
   AND2  XLXI_2 (.I0(s[0]), 
                .I1(XLXN_2), 
                .O(XLXN_14));
   AND2  XLXI_3 (.I0(XLXN_3), 
                .I1(s[1]), 
                .O(XLXN_5));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(s[1]), 
                .O(XLXN_16));
   INV  XLXI_5 (.I(s[0]), 
               .O(XLXN_3));
   INV  XLXI_6 (.I(s[1]), 
               .O(XLXN_2));
   AND2  XLXI_7 (.I0(I0[1]), 
                .I1(XLXN_4), 
                .O(XLXN_6));
   AND2  XLXI_8 (.I0(I1[1]), 
                .I1(XLXN_14), 
                .O(XLXN_27));
   AND2  XLXI_9 (.I0(I2[1]), 
                .I1(XLXN_5), 
                .O(XLXN_28));
   AND2  XLXI_10 (.I0(I3[1]), 
                 .I1(XLXN_16), 
                 .O(XLXN_29));
   OR4  XLXI_11 (.I0(XLXN_29), 
                .I1(XLXN_28), 
                .I2(XLXN_27), 
                .I3(XLXN_6), 
                .O(o[1]));
   AND2  XLXI_22 (.I0(I0[0]), 
                 .I1(XLXN_4), 
                 .O(XLXN_21));
   AND2  XLXI_23 (.I0(I1[0]), 
                 .I1(XLXN_14), 
                 .O(XLXN_22));
   AND2  XLXI_24 (.I0(I2[0]), 
                 .I1(XLXN_5), 
                 .O(XLXN_23));
   AND2  XLXI_25 (.I0(I3[0]), 
                 .I1(XLXN_16), 
                 .O(XLXN_24));
   OR4  XLXI_26 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(o[0]));
   AND2  XLXI_38 (.I0(I0[2]), 
                 .I1(XLXN_4), 
                 .O(XLXN_53));
   AND2  XLXI_39 (.I0(I1[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_54));
   AND2  XLXI_40 (.I0(I2[2]), 
                 .I1(XLXN_5), 
                 .O(XLXN_55));
   AND2  XLXI_41 (.I0(I3[2]), 
                 .I1(XLXN_16), 
                 .O(XLXN_56));
   OR4  XLXI_42 (.I0(XLXN_56), 
                .I1(XLXN_55), 
                .I2(XLXN_54), 
                .I3(XLXN_53), 
                .O(o[2]));
   AND2  XLXI_48 (.I0(I0[3]), 
                 .I1(XLXN_4), 
                 .O(XLXN_63));
   AND2  XLXI_49 (.I0(I1[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_64));
   AND2  XLXI_50 (.I0(I2[3]), 
                 .I1(XLXN_5), 
                 .O(XLXN_65));
   AND2  XLXI_51 (.I0(I3[3]), 
                 .I1(XLXN_16), 
                 .O(XLXN_66));
   OR4  XLXI_52 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .I2(XLXN_64), 
                .I3(XLXN_63), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module Seg_map_MUSER_Frame(Hexs, 
                           Scan, 
                           Seg_map);

    input [31:0] Hexs;
    input [2:0] Scan;
   output [7:0] Seg_map;
   
   
   MUX4T1_4_MUSER_Frame  MUX4140 (.I0({Hexs[24], Hexs[12], Hexs[5], Hexs[17]}), 
                                 .I1({Hexs[26], Hexs[13], Hexs[7], Hexs[19]}), 
                                 .I2({Hexs[28], Hexs[14], Hexs[9], Hexs[21]}), 
                                 .I3({Hexs[30], Hexs[15], Hexs[11], Hexs[23]}), 
                                 .s(Scan[1:0]), 
                                 .o(Seg_map[7:4]));
   MUX4T1_4_MUSER_Frame  MUX4141 (.I0({Hexs[25], Hexs[16], Hexs[4], Hexs[0]}), 
                                 .I1({Hexs[27], Hexs[18], Hexs[6], Hexs[1]}), 
                                 .I2({Hexs[29], Hexs[20], Hexs[8], Hexs[2]}), 
                                 .I3({Hexs[31], Hexs[22], Hexs[10], Hexs[3]}), 
                                 .s(Scan[1:0]), 
                                 .o(Seg_map[3:0]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_Frame(I0, 
                            I1, 
                            I2, 
                            I3, 
                            I4, 
                            I5, 
                            I6, 
                            I7, 
                            s, 
                            o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_90;
   wire XLXN_106;
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_112;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_115;
   wire XLXN_116;
   wire XLXN_117;
   wire XLXN_118;
   wire XLXN_119;
   wire XLXN_120;
   wire XLXN_121;
   
   MUX4T1_4_MUSER_Frame  M1 (.I0(I0[3:0]), 
                            .I1(I1[3:0]), 
                            .I2(I2[3:0]), 
                            .I3(I3[3:0]), 
                            .s(s[1:0]), 
                            .o(o0[3:0]));
   MUX4T1_4_MUSER_Frame  M2 (.I0(I4[3:0]), 
                            .I1(I5[3:0]), 
                            .I2(I6[3:0]), 
                            .I3(I7[3:0]), 
                            .s(s[1:0]), 
                            .o(o1[3:0]));
   MUX4T1_4_MUSER_Frame  M3 (.I0(I0[7:4]), 
                            .I1(I1[7:4]), 
                            .I2(I2[7:4]), 
                            .I3(I3[7:4]), 
                            .s(s[1:0]), 
                            .o(o2[3:0]));
   MUX4T1_4_MUSER_Frame  M4 (.I0(I4[7:4]), 
                            .I1(I5[7:4]), 
                            .I2(I6[7:4]), 
                            .I3(I7[7:4]), 
                            .s(s[1:0]), 
                            .o(o3[3:0]));
   INV  XLXI_21 (.I(s[2]), 
                .O(XLXN_90));
   AND2  XLXI_22 (.I0(o0[0]), 
                 .I1(XLXN_90), 
                 .O(XLXN_106));
   AND2  XLXI_23 (.I0(o1[0]), 
                 .I1(s[2]), 
                 .O(XLXN_107));
   AND2  XLXI_24 (.I0(o0[1]), 
                 .I1(XLXN_90), 
                 .O(XLXN_108));
   AND2  XLXI_25 (.I0(o1[1]), 
                 .I1(s[2]), 
                 .O(XLXN_109));
   AND2  XLXI_26 (.I0(o0[2]), 
                 .I1(XLXN_90), 
                 .O(XLXN_110));
   AND2  XLXI_27 (.I0(o1[2]), 
                 .I1(s[2]), 
                 .O(XLXN_111));
   AND2  XLXI_28 (.I0(o0[3]), 
                 .I1(XLXN_90), 
                 .O(XLXN_112));
   AND2  XLXI_29 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_113));
   AND2  XLXI_30 (.I0(o2[0]), 
                 .I1(XLXN_90), 
                 .O(XLXN_114));
   AND2  XLXI_31 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_115));
   AND2  XLXI_32 (.I0(o2[1]), 
                 .I1(XLXN_90), 
                 .O(XLXN_116));
   AND2  XLXI_33 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_117));
   AND2  XLXI_34 (.I0(o2[2]), 
                 .I1(XLXN_90), 
                 .O(XLXN_118));
   AND2  XLXI_35 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_119));
   AND2  XLXI_36 (.I0(o2[3]), 
                 .I1(XLXN_90), 
                 .O(XLXN_120));
   AND2  XLXI_37 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_121));
   OR2  XLXI_74 (.I0(XLXN_107), 
                .I1(XLXN_106), 
                .O(o[0]));
   OR2  XLXI_75 (.I0(XLXN_109), 
                .I1(XLXN_108), 
                .O(o[1]));
   OR2  XLXI_76 (.I0(XLXN_111), 
                .I1(XLXN_110), 
                .O(o[2]));
   OR2  XLXI_77 (.I0(XLXN_113), 
                .I1(XLXN_112), 
                .O(o[3]));
   OR2  XLXI_78 (.I0(XLXN_115), 
                .I1(XLXN_114), 
                .O(o[4]));
   OR2  XLXI_79 (.I0(XLXN_117), 
                .I1(XLXN_116), 
                .O(o[5]));
   OR2  XLXI_82 (.I0(XLXN_119), 
                .I1(XLXN_118), 
                .O(o[6]));
   OR2  XLXI_83 (.I0(XLXN_121), 
                .I1(XLXN_120), 
                .O(o[7]));
endmodule
`timescale 1ns / 1ps

module ScanSync_MUSER_Frame(Hexs, 
                            LES, 
                            point, 
                            Scan, 
                            AN, 
                            Hexo, 
                            LE, 
                            p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   MUX8T1_8_MUSER_Frame  MUX8180 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                 .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                 .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                 .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                 .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                 .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                 .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                 .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                 .s(Scan[2:0]), 
                                 .o(Hex[7:0]));
   MUX8T1_8_MUSER_Frame  MUX8181 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, 
         G0}), 
                                 .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                 .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                 .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                 .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                 .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                 .I6({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                 .I7({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                 .s(Scan[2:0]), 
                                 .o(COM[7:0]));
   BUF  XLXI_7 (.I(Hex[7]), 
               .O(Hexo[3]));
   BUF  XLXI_10 (.I(Hex[6]), 
                .O(Hexo[2]));
   BUF  XLXI_11 (.I(Hex[5]), 
                .O(Hexo[1]));
   BUF  XLXI_12 (.I(Hex[4]), 
                .O(Hexo[0]));
   BUF  XLXI_13 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_14 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_15 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_16 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_17 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_18 (.I(COM[6]), 
                .O(p));
   VCC  XLXI_19 (.P(V5));
   GND  XLXI_20 (.G(G0));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev_MUSER_Frame(flash, 
                            Hexs, 
                            LES, 
                            point, 
                            Scan, 
                            SW0, 
                            AN, 
                            SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [3:0] Hexo;
   wire [7:0] SEG_TXT;
   wire XLXN_2;
   wire [7:0] XLXN_9;
   wire XLXN_16;
   wire XLXN_17;
   
   MUXHM_MUSER_Frame  MUX218 (.a(XLXN_9[7:0]), 
                             .b(SEG_TXT[7:0]), 
                             .sel(SW0), 
                             .o(SEGMENT[7:0]));
   MC14495_ZJU_MUSER_Frame  M1 (.D0(Hexo[0]), 
                               .D1(Hexo[1]), 
                               .D2(Hexo[2]), 
                               .D3(Hexo[3]), 
                               .LE(XLXN_16), 
                               .point(XLXN_17), 
                               .a(SEG_TXT[0]), 
                               .b(SEG_TXT[1]), 
                               .c(SEG_TXT[2]), 
                               .d(SEG_TXT[3]), 
                               .e(SEG_TXT[4]), 
                               .f(SEG_TXT[5]), 
                               .g(SEG_TXT[6]), 
                               .p(SEG_TXT[7]));
   ScanSync_MUSER_Frame  M2 (.Hexs(Hexs[31:0]), 
                            .LES(LES[7:0]), 
                            .point(point[7:0]), 
                            .Scan(Scan[2:0]), 
                            .AN(AN[3:0]), 
                            .Hexo(Hexo[3:0]), 
                            .LE(XLXN_2), 
                            .p(XLXN_17));
   Seg_map_MUSER_Frame  M3 (.Hexs(Hexs[31:0]), 
                           .Scan(Scan[2:0]), 
                           .Seg_map(XLXN_9[7:0]));
   AND2  XLXI_3 (.I0(XLXN_2), 
                .I1(flash), 
                .O(XLXN_16));
endmodule
`timescale 1ns / 1ps

module Frame(clk_100mhz, 
             K_COL, 
             RSTN, 
             SW, 
             AN, 
             Buzzer, 
             CR, 
             K_ROW, 
             LED, 
             LEDCLK, 
             LEDCLR, 
             LEDDT, 
             LEDEN, 
             RDY, 
             readn, 
             SEGCLk, 
             SEGCLR, 
             SEGDT, 
             SEGEN, 
             SEGMENT);

    input clk_100mhz;
    input [3:0] K_COL;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output Buzzer;
   output CR;
   output [4:0] K_ROW;
   output [7:0] LED;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output RDY;
   output readn;
   output SEGCLk;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   output [7:0] SEGMENT;
   
   wire [7:0] blink;
   wire [63:0] blocks;
   wire [3:0] BTN_OK;
   wire [63:0] Disp_num;
   wire [31:0] Div;
   wire gameover;
   wire G0;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_2;
   wire [7:0] XLXN_189;
   wire XLXN_194;
   wire XLXN_196;
   wire [31:0] XLXN_200;
   wire [31:0] XLXN_210;
   wire [31:0] XLXN_212;
   wire [31:0] XLXN_213;
   wire [31:0] XLXN_216;
   wire [31:0] XLXN_218;
   wire [31:0] XLXN_231;
   wire [31:0] XLXN_232;
   wire XLXN_233;
   wire [2:0] XLXN_236;
   wire [2:0] XLXN_237;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   clkdiv  M1 (.clk(clk_100mhz), 
              .rst(rst), 
              .clkdiv(Div[31:0]));
   SAnti_jitter  M2 (.clk(clk_100mhz), 
                    .Key_y(K_COL[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_2[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(K_ROW[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_2[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(), 
                   .Bi(), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   VCC  XLXI_26 (.P(V5));
   GND  XLXI_27 (.G(G0));
   BUF  XLXI_29 (.I(V5), 
                .O(Buzzer));
   P2S  XLXI_33 (.clk(clk_100mhz), 
                .P_Data(Disp_num[63:0]), 
                .rst(rst), 
                .Serial(Div[20]), 
                .EN(SEGEN), 
                .sout(SEGDT), 
                .s_clk(SEGCLk), 
                .s_clrn(SEGCLR));
   Random_Block_Generate  XLXI_36 (.clk(clk_100mhz), 
                                  .gene_time(XLXN_200[31:0]), 
                                  .random({G0, G0}), 
                                  .rst(rst), 
                                  .Disp_num(blocks[63:0]), 
                                  .EN(XLXN_194));
   Control  XLXI_37 (.clk(clk_100mhz), 
                    .ctl(BTN_OK[1:0]), 
                    .rst(rst), 
                    .aim(XLXN_189[7:0]));
   Judge  XLXI_38 (.aim(XLXN_189[7:0]), 
                  .blocks(blocks[63:0]), 
                  .clk(clk_100mhz), 
                  .rst(rst), 
                  .Disp_num(Disp_num[63:0]), 
                  .gameover(gameover));
   Counter_Score  XLXI_40 (.EN(XLXN_194), 
                          .gameover(gameover), 
                          .rst(rst), 
                          .levelup(XLXN_196), 
                          .Score(XLXN_210[31:0]));
   Seg7_Dev_MUSER_Frame  XLXI_42 (.flash(G0), 
                                 .Hexs(XLXN_213[31:0]), 
                                 .LES({V5, V5, V5, V5, V5, V5, V5, V5}), 
                                 .point({G0, G0, G0, G0, G0, G0, G0, G0}), 
                                 .Scan({SW_OK[1], Div[19:18]}), 
                                 .SW0(V5), 
                                 .AN(AN[3:0]), 
                                 .SEGMENT(SEGMENT[7:0]));
   Regs_8_32  XLXI_43 (.Addr_A(SW_OK[5:3]), 
                      .Addr_B(XLXN_236[2:0]), 
                      .Addr_W1(XLXN_236[2:0]), 
                      .Addr_W2(XLXN_237[2:0]), 
                      .clk(Div[20]), 
                      .cr(V5), 
                      .Di1(XLXN_231[31:0]), 
                      .Di2(XLXN_232[31:0]), 
                      .WE(XLXN_233), 
                      .QA(XLXN_212[31:0]), 
                      .QB(XLXN_216[31:0]));
   MUX2T1_32  XLXI_44 (.I0(XLXN_210[31:0]), 
                      .I1(XLXN_212[31:0]), 
                      .s(SW_OK[2]), 
                      .o(XLXN_213[31:0]));
   MUX2T1_32  XLXI_47 (.I0(XLXN_216[31:0]), 
                      .I1(XLXN_210[31:0]), 
                      .s(gameover), 
                      .o(XLXN_218[31:0]));
   Compare  XLXI_50 (.A(XLXN_218[31:0]), 
                    .B(XLXN_216[31:0]), 
                    .clk(Div[20]), 
                    .D1(XLXN_231[31:0]), 
                    .D2(XLXN_232[31:0]), 
                    .EN(XLXN_233), 
                    .W1(XLXN_236[2:0]), 
                    .W2(XLXN_237[2:0]));
   Generate_Control  XLXI_51 (.levelup(XLXN_196), 
                             .gene_time(XLXN_200[31:0]));
   GPIO  XLXI_52 (.clk(clk_100mhz), 
                 .EN(V5), 
                 .P_Data({G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, 
         G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, 
         G0, G0}), 
                 .rst(rst), 
                 .Start(Div[10]), 
                 .GPIOf0(), 
                 .led_clk(LEDCLK), 
                 .led_clrn(LEDCLR), 
                 .LED_PEN(LEDEN), 
                 .led_sout(LEDDT));
   PIO  XLXI_53 (.clk(clk_100mhz), 
                .EN(V5), 
                .PData_in({G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, 
         G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, G0, 
         G0, G0}), 
                .rst(G0), 
                .GPIOf0(), 
                .LED(LED[7:0]));
endmodule
